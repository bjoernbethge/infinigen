[build-system]
requires = ["setuptools", "numpy", "Cython"]
build-backend = "setuptools.build_meta"

[project]
name = "infinigen"
readme = "README.md"
license = "BSD-3-Clause"
dynamic = ["version"]

description = "Infinite Photorealistic Worlds using Procedural Generation"
keywords = [
    "computer vision",
    "data generation",
    "procedural"
]
classifiers = [
    "Programming Language :: Python :: 3",
]

requires-python = "==3.11.*"
dependencies = [
    # Core dependencies that work on Windows
    "gin_config>=0.5.0",
    "imageio>=2.33.0", # Updated for scikit-image compatibility
    "matplotlib",
    "networkx",
    "numpy<2",
    "opencv-python<4.9.0",
    "pandas",
    "psutil",
    "scipy",
    "shapely<=2.0.5",
    "tqdm",
    "trimesh<3.23.0",
    "OpenEXR",
    "submitit",
    "geomdl",
    "python-fcl",
    "rtree",
    # Advanced features - all working on Windows
    "scikit-image>=0.25.0", # Newer version with pre-compiled wheels
    "scikit-learn<1.4.0",
    "bpy==4.2.0",
    "coacd",
]

[project.optional-dependencies]
terrain = [
    "landlab==2.6.0",
    "pyrender<0.2.0",
    "setuptools"
]
vis = [
    "einops",
    "flow_vis",
    "numba",
    "pyglet<2"
]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "pytest-timeout",
    "pytype",
    "ruff",
    "isort",
    "tabulate",
    "rapidfuzz",
    "pre-commit"
]
wandb = [
    "wandb"
]

[tool.setuptools]
include-package-data = false
license-files = []

[tool.setuptools.packages.find]
include = ["infinigen*"]
exclude = [
    "infinigen.datagen.customgt.dependencies*",
    "infinigen.datagen.customgt.build*",
]

[tool.setuptools.package-data]
"*" = ["*.gin", "*.txt", "*.json"]
"infinigen" = [
    "terrain/**/*.soil",
    "terrain/lib/**/*.so",
    "terrain/lib/**/*.o",
    "datagen/customgt/build/customgt",
    "assets/objects/creatures/parts/nurbs_data/*.npy",
]

[tool.setuptools.dynamic]
version = {attr = "infinigen.__version__"}

[tool.pytest.ini_options]
testpaths = "tests"
junit_family = "xunit2"
markers = ["nature", "indoors", "skip_for_ci"]
timeout = 480

filterwarnings = [
    "ignore:The value of the smallest subnormal for <class 'numpy.float:UserWarning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
    "ignore:Importing from numpy.matlib is deprecated since 1.19.0:PendingDeprecationWarning",
    "ignore:Please import `label` from the `scipy.ndimage` namespace; the `scipy.ndimage.measurements` namespace is deprecated and will be removed in SciPy 2.0.0:DeprecationWarning"
]

[tool.cibuildwheel]
test-extras = ["dev"]
test-command = "pytest tests"

[tool.ruff]
target-version = "py310"
exclude = [
    "*.ipynb",
    "infinigen/datagen/customgt/dependencies/",
    "infinigen/OcMesher",
    "infinigen/infinigen_gpl",
    "infinigen/terrain/mesh_to_sdf",
    "infinigen/terrain/mesher/_marching_cubes_lewiner*"
]

[tool.ruff.lint]
select = [
    "E",
    "I",
    "F",
    "S102",
    "TID252",
]
ignore = [
    "E501",
    "E741",
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = [
    "F401",
    "CPY001",
]
"infinigen/assets/*" = ["F841"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.pytype]
inputs = ['infinigen', 'infinigen_examples']
